% Document style definitions
% --------------------------
\documentclass[german]{beamer}

\usetheme{Darmstadt}
\setbeamertemplate{navigation symbols}{}
%\usefonttheme[onlylarge]{structurebold}

\usepackage{tikz}

\usepackage[T1]{fontenc}
\usepackage{lmodern}

\usepackage[german]{babel}
\usepackage{ucs}
\usepackage[utf8x]{inputenc}

%\AtBeginSection[]
%{
%  \begin{frame}
%    \frametitle{Übersicht}
%    \tableofcontents[currentsection]
%  \end{frame}
%}

%\usepackage{beamerthemesplit}


% Document properties
% -------------------
\title{Unknown Horizons}
%\author{}
\date{Dusmania 10, 2008}

\begin{document}

\frame{\titlepage}

\frame{\tableofcontents}

% Content
% -------

\section{Einführung}
	\subsection{Zusammenfassung}
		\begin{frame}
		\frametitle{Ein Anno-ähnliches Spiel}
		\begin{columns}
		\begin{column}{3cm}
		\includegraphics[width=3cm]{oalogo.png}
		\end{column}
		\begin{column}{9cm}
		\begin{itemize}[<+-|alert@+>]

			\item Ziel: Erschaffung eines quelloffenen, Anno-ähnlichen Spiels
			\item Kein Anno-Klon
			\item Noch in der frühen Entwicklungsphase
			\item Helfer sind immer willkommen!

		\end{itemize}
		\end{column}
		\end{columns}
		\end{frame}

	\subsection{Lizenz}
		\begin{frame}
		\frametitle{GPL / CreativeCommons}
		\begin{itemize}[<+-|alert@+>]

			\item Code: GPLv2
			\item Grafik/Musik: CreativeCommons CC-BY-SA 3.0

		\end{itemize}
		\end{frame}

	\subsection{Geschichte}
		\begin{frame}
		\frametitle{Python: Der 4. Versuch}
		\begin{itemize}[<+-|alert@+>]

			\item 2005: C-Version
			\item 2006: C++-Version mit neuem Team
			\item Ende 2007: Experimente mit 3D
			\item Anfang 2008: Beschluss zum Wechsel auf Python und die FIFE-Engine
			\item März 2008: Commit \#100
			\item Juni 2008: Commit \#500
			\item Juli 2008: interner Milestone 2008.0 fertig
			\item Juli 2008: Commit \#1000

		\end{itemize}
		\end{frame}

	\subsection{Milestone 2008.0}
		\begin{frame}
		\frametitle{Was funktioniert:}
		\begin{itemize}[<+-|alert@+>]

			\item Kartendarstellung
			\item Bewegen von Einheiten (momentan nur Schiffe)
			\item Bauen eines Kontors, Holzfällers und Schafhirten
			\item Grasende Schafe
			\item Holzfäller fällt Bäume
			\item Bäume werden ins Kontor transportiert
			\item Anpassung des FIFE-Karteneditors an unser Format

		\end{itemize}
		\end{frame}


\section{Technik}

	\subsection{Zusammenfassung}
		\begin{frame}
		\frametitle{FIFE, Python und SQLite}
		\begin{itemize}[<+-|alert@+>]

			\item Basis: FIFE (http://www.fifengine.de/), eine offene Spiele-Engine in C++
			\item Enger Kontakt zu den Entwicklern
			\item Implementierung des Spiels selbst in Python
			\item SQLite als Datenspeicher

		\end{itemize}
		\end{frame}

	\subsection{Architektur}
		\begin{frame}

		%\includegraphics[width=1cm]{arch.png}

		\begin{columns}
		\begin{column}{5cm}
		\begin{tikzpicture}
			\useasboundingbox (-2.5,-2.5-2.5) rectangle (2.5+0.7+0.5,2.5+0.7+0.5);
			\tikzset{frect/.style={color=black!60,draw,text=black,fill=black!20,minimum size=1.4cm,rectangle,font=\scriptsize,rounded corners}}
			\tikzset{arr/.style={very thick,line join=round}}
			\tikzset{active/.style={color=blue!60,text=black,fill=blue!30}}

			\only<1> \draw (0,2.5) node[frect,active] {GUI};
			\only<2-4> \draw (0,2.5) node[frect] {GUI};

			\draw (2.5,2.5) node[frect] {FIFE};

			\draw (-2.5,0) node[frect,fill=black!10,dashed] {Netzwerk};

			\only<2> \draw (0,0) node[frect,active] {Manager};
			\only<1,3-4> \draw (0,0) node[frect] {Manager};

			\only<3> \draw (2.5,0) node[frect,active] {World};
			\only<1-2,4> \draw (2.5,0) node[frect] {World};

			\only<4> \draw (0,-2.5) node[frect,active] {Timer};
			\only<1-3> \draw (0,-2.5) node[frect] {Timer};

			\draw (2.5,-2.5) node[frect] {Scheduler};

			\draw[->,arr] (0.7,0) -- (2.5-0.7,0);		% manager -> world
			\draw[<->,arr] (0,-0.7) -- (0,-2.5+0.7);	% manager <-> timer
			\draw[<->,arr,densely dashed] (-0.7,0) -- (-2.5+0.7,0);	% manager <-> netzwerk
			\draw[->,arr] (0,2.5-0.7) -- (0,0.7);		% GUI -> manager
			\draw[<->,arr] (0.7,2.5) -- (2.5-0.7,2.5);	% GUI <-> FIFE
			\draw[->,arr] (2.5,0.7) -- (2.5,2.5-0.7);	% world -> FIFE
			\draw[<->,arr] (2.5,-0.7) -- (2.5,-2.5+0.7);	% world <-> scheduler
			\draw[->,arr] (0.7,-2.5) -- (2.5-0.7,-2.5);	% timer -> scheduler
			\draw[->,arr] (0.7,0.7) -- (2.5-0.7,2.5-0.7); 	% manager -> FIFE
			\draw[->,arr] (2.5-0.7,0.7) -- (0.7,2.5-0.7);	% world -> GUI
			\draw[->,arr] (0.7,-2.5+0.7) -- (2.5-0.7,-0.7); % timer -> world
			\draw[->,arr] (2.5+0.7,2.5) -- (2.5+0.7+0.5,2.5) -- (2.5+0.7+0.5,-2.5-0.7-0.5) -- (0,-2.5-0.7-0.5) -- (0,-2.5-0.7);	 % FIFE -> Timer
		\end{tikzpicture}
		\end{column}

		\begin{column}{5cm}

		\only<1>{
		\begin{itemize}
			\item GUI: Kommuniziert viel mit FIFE, gibt Befehle an den Manager und fragt World-Objekte nach Informationen, darf aber keine Aktionen direkt auf ihnen ausführen
		\end{itemize}
		}

		\only<2>{
		\begin{itemize}
			\item Manager (Singleplayer): Bekommt Befehle von der GUI und leitet sie an die World-Objekte und FIFE weiter
			\item Manager (Multiplayer):
			\begin{itemize}
				\item Bekommt Befehle von der GUI und schickt sie an die Mitspieler
				\item Führt Befehle der Mitspieler aus
			\end{itemize}
		\end{itemize}
		}

		\only<3>{
		\begin{itemize}
			\item World: Sammlung von Objekten, die auf allen mitspielenden Unknown Horizons-Instanzen synchronisiert sind
		\end{itemize}
		}

		\only<4>{
		\begin{itemize}
			\item Timer: Bekommt regelmäßig von FIFE die Kontrolle übergeben
		\end{itemize}
		}

		\end{column}
		\end{columns}

		\end{frame}

%	\subsection{SQLite}

	\subsection{FIFE}
		\begin{frame}
			\frametitle{Über FIFE}

			\begin{itemize}[<+-|alert@+>]
				\item Enstanden im September 2005 als »Flexible Isometric Fallout-like Engine«
				\item Von Grund auf neu geschrieben; kein Fork
				\item Ursprünglich als Engine für isometrische Rollenspiele wie Fallout gedacht
				\begin{itemize}
					\item Fallout-Dateiformate wurden benutzt, um Beispielinhalte zu haben, ohne diese selbst erstellen zu müssen
					\item Damit aber auch Abhängigkeiten von Fallout
				\end{itemize}
				\item Ab Sommer 2006 Entfernung von den ursprünglichen Falloutwurzeln und Beschränkungen; Konzeption von eigenen, von Fallout unabhängigen Dateiformaten
				\item 2.5D-Engine; vermischt 2D- und 3D-Techniken
				\item Geschrieben in C++ und Python: FIFE-Nutzer können beide Sprachen flexibel für ihre Spiele einsetzen
				\item Lizenz: seit Milestone 2008.1 LGPL, vorher GPL

			\end{itemize}
		\end{frame}

		\begin{frame}
			\frametitle{Derzeitiger Stand}

			\begin{itemize}[<+-|alert@+>]

				\item Mission Statement: »FIFE ist ein flexibles Framework zur Erstellung von isometrischen Spielen, welche auf verschiedenen Plattformen laufen (mindestens Linux, Mac, Win32 angestrebt).«
				\item Unterstützung der Vogelperspektive neben Isometrie und Ähnlichem
				\item Falloutwurzeln nur noch rudimentär erkennbar; Engine jetzt wesentlich flexibler
				\item Fallout-Dateiformate zum Großteil nicht mehr unterstützt
				\item Editor für eigene Karten grundlegend funktionsfähig, jedoch noch in Entwicklung
				\item 3D-View-Matrix erlaubt spezielle Effekte: Zoom (nur OpenGL), Rotation, Neigung

			\end{itemize}
		\end{frame}

		\begin{frame}
			\frametitle{Zukunft der Engine}

			\begin{itemize}[<+-|alert@+>]

				\item Umbennenung des FIFE-Akronyms zur Verdeutlichung der Loslösung von den Falloutwurzeln
				\item Netzwerkunterstützung für Multiplayer- und Videosupport
				\item Verbessertes Demospiel, um die Fähigkeiten der Engine einem breiteren Publikum zu präsentieren
				\item Mehr Entwickler und Nutzer für FIFE gewinnen, um eine aktive Community aufzubauen (Vorbild: große 3D-Engines wie Ogre)

			\end{itemize}
		\end{frame}

\section{Zukunft}
	\subsection{Milestone 2008.1}
		\begin{frame}
		\frametitle{Was hoffentlich bald funktioniert:}

		\begin{itemize}[<+-|alert@+>]

			\item Grundlegende Multiplayer-Unterstützung
			\item Mehr funktionierende Gebäude
			\item Grafiken!
			\item Pathfinding

		\end{itemize}
		\end{frame}



\section{Vorspielen}
	\begin{frame}
	\huge{Vorspielen!}
	\end{frame}

\end{document}